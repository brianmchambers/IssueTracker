@page "/"
@rendermode InteractiveServer

@using IssueTracker.Core.Models
@using IssueTracker.Core.Services
@inject ProjectService ProjectService

<PageTitle>Issue Tracker</PageTitle>

<div class="container mt-4">
    <h2 class="mb-4">Issue Tracker</h2>

    <div class="row">
        <!-- Project List (left column) -->
        <div class="col-md-4 border-end">
            <h4>Projects</h4>

            @if (Projects.Count > 0)
            {
                <ProjectList Projects="@Projects" OnProjectSelected="HandleProjectSelected" />
            }
            else
            {
                <p>Loading projects...</p>
            }
        </div>

        <!-- Ticket List (right column) -->
        <div class="col-md-8">
            @if (SelectedProjectId != Guid.Empty)
            {
                <TicketList ProjectId="@SelectedProjectId" />
            }
            else
            {
                <p class="text-muted">Select a project to view its tickets.</p>
            }
        </div>
    </div>
</div>

@code {
    private List<Project> Projects = [];
    private Guid SelectedProjectId;

    protected override async Task OnInitializedAsync()
    {
        Projects = await ProjectService.GetAllAsync();
    }

    private void HandleProjectSelected(Guid projectId)
    {
        SelectedProjectId = projectId;
    }
}
